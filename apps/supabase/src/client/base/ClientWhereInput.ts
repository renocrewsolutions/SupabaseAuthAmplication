/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { ContractListRelationFilter } from "../../contract/base/ContractListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FreelancerWhereUniqueInput } from "../../freelancer/base/FreelancerWhereUniqueInput";
import { FreelancerListRelationFilter } from "../../freelancer/base/FreelancerListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { JobListRelationFilter } from "../../job/base/JobListRelationFilter";

@InputType()
class ClientWhereInput {
  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  budget?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ContractListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ContractListRelationFilter)
  @IsOptional()
  @Field(() => ContractListRelationFilter, {
    nullable: true,
  })
  contracts?: ContractListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FreelancerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FreelancerWhereUniqueInput)
  @IsOptional()
  @Field(() => FreelancerWhereUniqueInput, {
    nullable: true,
  })
  freelancer?: FreelancerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => FreelancerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FreelancerListRelationFilter)
  @IsOptional()
  @Field(() => FreelancerListRelationFilter, {
    nullable: true,
  })
  freelancers?: FreelancerListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => JobListRelationFilter,
  })
  @ValidateNested()
  @Type(() => JobListRelationFilter)
  @IsOptional()
  @Field(() => JobListRelationFilter, {
    nullable: true,
  })
  jobs?: JobListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;
}

export { ClientWhereInput as ClientWhereInput };
