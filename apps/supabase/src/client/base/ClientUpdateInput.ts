/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
} from "class-validator";
import { ContractUpdateManyWithoutClientsInput } from "./ContractUpdateManyWithoutClientsInput";
import { Type } from "class-transformer";
import { FreelancerWhereUniqueInput } from "../../freelancer/base/FreelancerWhereUniqueInput";
import { FreelancerUpdateManyWithoutClientsInput } from "./FreelancerUpdateManyWithoutClientsInput";
import { JobUpdateManyWithoutClientsInput } from "./JobUpdateManyWithoutClientsInput";

@InputType()
class ClientUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  budget?: number | null;

  @ApiProperty({
    required: false,
    type: () => ContractUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => ContractUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => ContractUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  contracts?: ContractUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FreelancerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FreelancerWhereUniqueInput)
  @IsOptional()
  @Field(() => FreelancerWhereUniqueInput, {
    nullable: true,
  })
  freelancer?: FreelancerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FreelancerUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => FreelancerUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => FreelancerUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  freelancers?: FreelancerUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => JobUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => JobUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => JobUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  jobs?: JobUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;
}

export { ClientUpdateInput as ClientUpdateInput };
