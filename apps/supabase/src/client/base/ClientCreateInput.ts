/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
} from "class-validator";
import { ContractCreateNestedManyWithoutClientsInput } from "./ContractCreateNestedManyWithoutClientsInput";
import { Type } from "class-transformer";
import { FreelancerWhereUniqueInput } from "../../freelancer/base/FreelancerWhereUniqueInput";
import { FreelancerCreateNestedManyWithoutClientsInput } from "./FreelancerCreateNestedManyWithoutClientsInput";
import { JobCreateNestedManyWithoutClientsInput } from "./JobCreateNestedManyWithoutClientsInput";

@InputType()
class ClientCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  budget?: number | null;

  @ApiProperty({
    required: false,
    type: () => ContractCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => ContractCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => ContractCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  contracts?: ContractCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FreelancerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FreelancerWhereUniqueInput)
  @IsOptional()
  @Field(() => FreelancerWhereUniqueInput, {
    nullable: true,
  })
  freelancer?: FreelancerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FreelancerCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => FreelancerCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => FreelancerCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  freelancers?: FreelancerCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => JobCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => JobCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => JobCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  jobs?: JobCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;
}

export { ClientCreateInput as ClientCreateInput };
