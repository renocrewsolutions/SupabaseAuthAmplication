/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { ClientListRelationFilter } from "../../client/base/ClientListRelationFilter";
import { ContractListRelationFilter } from "../../contract/base/ContractListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { ProposalListRelationFilter } from "../../proposal/base/ProposalListRelationFilter";

@InputType()
class FreelancerWhereInput {
  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ClientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ClientListRelationFilter)
  @IsOptional()
  @Field(() => ClientListRelationFilter, {
    nullable: true,
  })
  clients?: ClientListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ContractListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ContractListRelationFilter)
  @IsOptional()
  @Field(() => ContractListRelationFilter, {
    nullable: true,
  })
  contracts?: ContractListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProposalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProposalListRelationFilter)
  @IsOptional()
  @Field(() => ProposalListRelationFilter, {
    nullable: true,
  })
  proposals?: ProposalListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  skills?: StringNullableFilter;
}

export { FreelancerWhereInput as FreelancerWhereInput };
