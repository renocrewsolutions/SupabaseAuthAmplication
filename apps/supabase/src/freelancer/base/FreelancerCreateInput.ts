/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { ClientCreateNestedManyWithoutFreelancersInput } from "./ClientCreateNestedManyWithoutFreelancersInput";
import { ContractCreateNestedManyWithoutFreelancersInput } from "./ContractCreateNestedManyWithoutFreelancersInput";
import { ProposalCreateNestedManyWithoutFreelancersInput } from "./ProposalCreateNestedManyWithoutFreelancersInput";

@InputType()
class FreelancerCreateInput {
  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ClientCreateNestedManyWithoutFreelancersInput,
  })
  @ValidateNested()
  @Type(() => ClientCreateNestedManyWithoutFreelancersInput)
  @IsOptional()
  @Field(() => ClientCreateNestedManyWithoutFreelancersInput, {
    nullable: true,
  })
  clients?: ClientCreateNestedManyWithoutFreelancersInput;

  @ApiProperty({
    required: false,
    type: () => ContractCreateNestedManyWithoutFreelancersInput,
  })
  @ValidateNested()
  @Type(() => ContractCreateNestedManyWithoutFreelancersInput)
  @IsOptional()
  @Field(() => ContractCreateNestedManyWithoutFreelancersInput, {
    nullable: true,
  })
  contracts?: ContractCreateNestedManyWithoutFreelancersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProposalCreateNestedManyWithoutFreelancersInput,
  })
  @ValidateNested()
  @Type(() => ProposalCreateNestedManyWithoutFreelancersInput)
  @IsOptional()
  @Field(() => ProposalCreateNestedManyWithoutFreelancersInput, {
    nullable: true,
  })
  proposals?: ProposalCreateNestedManyWithoutFreelancersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  skills?: string | null;
}

export { FreelancerCreateInput as FreelancerCreateInput };
